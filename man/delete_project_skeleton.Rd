% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/delete_project_skeleton.R
\name{delete_project_skeleton}
\alias{delete_project_skeleton}
\title{Delete all files and folders in a project, except a specified directory}
\usage{
delete_project_skeleton(project_root = "../", keep_dir = "tools")
}
\arguments{
\item{project_root}{Character scalar. Path to the root directory of the
project to clean. Defaults to \code{"../"} on the assumption it is being
run from "project_name/tools/project_creator.qmd". Must exist.}

\item{keep_dir}{Character scalar. Name of the directory (relative to
\code{project_root}) to preserve. Defaults to \code{"tools"} on the assumption
it is being run from "project_name/tools/project_creator.qmd".
If the directory does not exist, it will simply be ignored.}
}
\value{
Invisibly returns \code{NULL}. Prints a message listing deleted items or noting
that nothing was deleted.
}
\description{
This function removes ALL files and folders inside a given project root,
including the .git folder (!), except for a single directory that you
choose to preserve. It is useful for quickly clearing a project created by
\code{create_project_skeleton()} while keeping reusable tools
(e.g., helper scripts containing \code{create_project_skeleton()}, in /tools)
intact. I use it mostly for testing \code{create_project_skeleton()}.
}
\details{
\itemize{
\item All files and folders in \code{project_root} will be deleted except the
one specified in \code{keep_dir}.
\item The function uses \code{unlink()} for recursive deletion, so \strong{deleted
items cannot be recovered} unless under version control.
\item Hidden files (e.g., \code{.gitignore}, \code{.Rhistory}) are also removed unless
they are inside \code{keep_dir}.
}
}
\examples{
\dontrun{
# Delete everything in the parent directory except the 'tools' folder
delete_project_skeleton(project_root = "../", keep_dir = "tools")

# Delete everything except 'scripts'
delete_project_skeleton(project_root = ".", keep_dir = "scripts")
}

}
