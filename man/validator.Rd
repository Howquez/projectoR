% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validator.R
\name{validator}
\alias{validator}
\title{Validate a project directory structure against psych-ds-ish requirements}
\usage{
validator(project_root = "../")
}
\arguments{
\item{project_root}{Character scalar. Path to the project root directory.
Defaults to \code{"../"}. The path is normalized internally.}
}
\value{
A tibble with one row per check, containing:
\describe{
\item{Test}{Description of the check performed.}
\item{Status}{Either \code{"PASS"} or \code{"FAIL"}.}
\item{Details / Guidance}{Additional information, such as instructions
for fixing failures or offending file paths.}
}
}
\description{
This function checks whether a project directory follows a defined set
of structural and file-placement rules. The layout is loosely inspired by the
\href{https://psych-ds.github.io/}{psych-DS} specification, but is \strong{not}
fully psych-DS compliant. It adds extra conventions for reproducibility
and common analysis workflows, including Quarto file templates and
a \code{.gitignore} file. It does not comply with psych-ds's .json requirement.
}
\details{
The validator performs several categories of checks:
\itemize{
\item \strong{Required directories} — Ensures that expected top-level and
nested folders exist (e.g., \verb{code/}, \verb{data/raw/}, \verb{methods/}).
\item \strong{Required files} — Confirms presence of a \code{readme.md} and
a license file (e.g., \code{LICENSE}).
\item \strong{Filetype-location constraints} — Ensures specific file types
(e.g., \code{.qmd}, \code{.csv}, \code{.rds}, \code{.png}) only appear in approved
subdirectories and not elsewhere in the project.
\item \strong{Special HTML rule} — All \code{.html} files must be under \verb{code/}
or \verb{methods/}.
\item \strong{Hygiene checks} — Optional rules that discourage spaces in
filenames, check for \code{.gitignore} presence, and prevent data
files being stored under \verb{code/}.
}
}
\examples{
\dontrun{
# Run validation on the parent directory
results <- validator("../")

# Pretty-print results in the console
print(results)

# Display results as a styled HTML table
library(knitr)
library(kableExtra)
results |>
  knitr::kable() |>
  kableExtra::kable_classic(full_width = FALSE)
}

}
